# Generated by Django 5.2.7 on 2025-10-16 22:15

import django.core.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=99)),
                ("author", models.CharField(max_length=99)),
                (
                    "cover",
                    models.CharField(
                        choices=[("HARD", "HARD"), ("SOFT", "SOFT")], max_length=10
                    ),
                ),
                (
                    "inventory",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "daily_fee",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
            ],
            options={
                "ordering": ["title", "author"],
                "indexes": [
                    models.Index(fields=["title"], name="books_book_title_d3218d_idx"),
                    models.Index(
                        fields=["author"], name="books_book_author_b941fe_idx"
                    ),
                    models.Index(fields=["cover"], name="books_book_cover_bf207a_idx"),
                ],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("inventory__gte", 0)),
                        name="book_inventory_gte_0",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("daily_fee__gte", 0)),
                        name="book_daily_fee_gte_0",
                    ),
                ],
            },
        ),
    ]
